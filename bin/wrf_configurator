#!/usr/bin/env python

import sys
import os
import argparse
import yaml
from tdm.wrf import configurator
from tdm import VERSION as version


from datetime import datetime

NOW = datetime.now()

SUPPORTED_TARGETS = ['WPS', 'WRF']


def make_parser():
    parser = argparse.ArgumentParser(
        description="Prepare WRF configuration files",
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    )
    parser.add_argument('-V', '--version', action='version',
                        version=version,
                        help='print version number and exit')
    parser.add_argument(
        '--target', metavar="|".join(SUPPORTED_TARGETS),
        choices=SUPPORTED_TARGETS, default='WPS')
    parser.add_argument('--config',
                        type=argparse.FileType('r', encoding='UTF-8'))
    parser.add_argument('--ofile',
                        type=argparse.FileType('w', encoding='UTF-8'))
    return parser


def generate_header(target):
    now = datetime.utcnow()
    header = """
# WRF CONFIGURATOR V{} {}
# {}
""".format(version, target, now.strftime("%Y-%m-%d_%H:%M:%Sz"))
    return header


def write_wps(config, ostream):
    ostream.write(generate_header('WPS'))
    ostream.write(config.generate_share())
    ostream.write(config.generate_geogrid())
    ostream.write(config.generate_ungrib())
    ostream.write(config.generate_metgrid())


def main(argv):
    parser = make_parser()
    args, unknown = parser.parse_known_args(argv)
    config = configurator.make(yaml.load(args.config.read()))
    if args.target == 'WPS':
        write_wps(config, args.ofile)


if __name__ == "__main__":
    main(sys.argv)
